<!-- Abacus ant built script -->

<project name="abacus-ds" default="junit" basedir=".">

	<!-- Give user a chance to override without editing this file
       (and without typing -D each time it compiles it) -->
	<property file="build.properties" />

	<path id="build.class.path">
		<pathelement location="${build.classes.dir}" />
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
			<include name="**/*.jar" />
		</fileset>
	</path>

	<patternset id="support.files">
		<include name="**/*.jpg" />
		<include name="**/*.gif" />
		<include name="**/*.dtd" />
		<include name="**/*.xsd" />
		<include name="**/*.xml" />
		<include name="**/*.xslt" />
		<include name="**/*.wsdl" />

		<!-- exclude everything we don't want in the jar -->
		<exclude name="${build.dir}/**/*" />
		<exclude name="${docs.dir}/**/*" />
		<exclude name="classes/**/*" />
		<exclude name="**/*.properties" />
		<exclude name="**/*.ccf" />
		<exclude name="**/*.cfg.xml" />
		<exclude name="**/ehcache.xml" />
		<exclude name="**/log4j.xml" />
		<exclude name="build.xml" />
		<exclude name="build.properties" />
	</patternset>

	<tstamp>
		<format property="current.date" pattern="yyyyMMdd" />
	</tstamp>

	<path id="cobertura.classpath">
		<fileset dir="${cobertura.dir}">
			<include name="cobertura.jar" />
			<include name="lib/**/*.jar" />
		</fileset>
	</path>

	<taskdef classpathref="cobertura.classpath" resource="tasks.properties" />

	<target name="clean">
		<delete includeEmptyDirs="true">
			<fileset dir="${build.classes.dir}" includes="**/*" />
		</delete>
		<delete includeEmptyDirs="true">
			<fileset dir="${dist.dir}" includes="**/*" />
		</delete>
	</target>

	<target name="prepare">
		<mkdir dir="${build.classes.dir}" />
	</target>


	<target name="compile" depends="clean,prepare" description="Compile the Java source code">
		<available classname="org.eclipse.core.launcher.Main" property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" classpath="${java.class.path}" />

		<javac srcdir="${src.dir}" destdir="${build.classes.dir}" classpathref="build.class.path" debug="on" source="1.8" target="1.8">

		</javac>

		<delete dir="${build.classes.dir}/java" />
	</target>

	<target name="compile-test" depends="compile" description="Compile the Java source code">
		<available classname="org.eclipse.core.launcher.Main" property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" classpath="${java.class.path}" />
		<javac srcdir="${test.dir}; ${unittest.dir}" destdir="${build.classes.dir}" classpathref="build.class.path" debug="on" optimize="${javac.optimize}" nowarn="on">
		</javac>
	</target>

	<!-- Some of this can probably be moved to common-build... -->
	<target name="jar" depends="compile" description="Build the distribution .jar file">
		<delete file="${dist.dir}/${project-name}-${version}.jar" />

		<copy todir="${build.classes.dir}">
			<fileset dir="${src.dir}">
				<patternset refid="support.files" />
			</fileset>
		</copy>

		<jar filesetmanifest="merge" jarfile="${dist.dir}/${project-name}-${version}.jar" basedir="${build.classes.dir}" />

	</target>

	<target name="junit" depends="compile-test">
		<delete dir="${report.dir}/junit/${current.date}/xml" quiet="true" />
		<mkdir dir="${report.dir}/junit/${current.date}/xml" />
		<junit printsummary="on" fork="true" forkmode="once" showoutput="false">

			<classpath location="${instrumented.dir}" />
			<classpath refid="cobertura.classpath" />

			<classpath refid="build.class.path" />
			<formatter type="xml" />
			<batchtest fork="true" toDir="${report.dir}/junit/${current.date}/xml">
				<fileset dir="${test.dir}">
					<include name="**/AllUnitTest.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="report-junit">
		<delete dir="${report.dir}/junit/${current.date}/html" />
		<mkdir dir="${report.dir}/junit/${current.date}/html" />
		<junitreport todir="${report.dir}/junit/${current.date}/html">
			<fileset dir="${report.dir}/junit/${current.date}/xml">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${report.dir}/junit/${current.date}/html" />
		</junitreport>
	</target>

	<target name="instrument">
		<!--
			Remove the coverage data file and any old instrumentation.
		-->
		<delete file="${cobertura.datafile}" />
		<delete dir="${instrumented.dir}" />

		<antcall target="compile">
			<param name="compile.debug" value="on" />
		</antcall>

		<!--
			Instrument the application classes, writing the
			instrumented classes into ${build.instrumented.dir}.
		-->
		<cobertura-instrument todir="${instrumented.dir}">
			<!--
				The following line causes instrument to ignore any
				source line containing a reference to log4j, for the
				purposes of coverage reporting.
			-->
			<ignore regex="org.apache.log4j.*" />

			<fileset dir="${build.classes.dir}">
				<!--
					Instrument all the application classes, but
					don't instrument the test classes.
				-->
				<include name="**/*.class" />
				<exclude name="**/entity/" />
				<exclude name="**/*Test.class" />
				<exclude name="**/*Test*.class" />
			</fileset>
		</cobertura-instrument>
	</target>

	<target name="report-cobertura">
		<delete dir="${report.dir}/coverage" quiet="true" />

		<cobertura-report format="html" datafile="${cobertura.datafile}" destdir="${report.dir}/coverage">
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="${test.dir}">
				<include name="**/*.java" />
			</fileset>
		</cobertura-report>
	</target>

	<!-- Some of this can probably be moved to common-build... -->
	<target name="jar-src" description="Build the src .jar file">
		<delete file="$${dist.dir}/${project-name}-${version}-sources.jar" />
		<jar filesetmanifest="merge" jarfile="${dist.dir}/sources.jar" basedir="${src.dir}" />
	</target>

	<target name="javadoc" description="Compile the Javadoc API documentation to dist dir">
		<delete dir="${docs.api.dir}" />
		<mkdir dir="${docs.api.dir}" />
		<javadoc packagenames="abacus-ds" access="public" classpathref="build.class.path" useexternalfile="yes" destdir="${docs.api.dir}" use="true" protected="false" version="true" windowtitle="${project-name} API Documentation" Overview="${docs.api.dir}/package.html" doctitle="${project-name} API Documentation" Locale="en_US" link="${javadoc}">
			<packageset dir="${src.dir}" defaultexcludes="yes">
				<include name="com/landawn/abacus/**" />
			</packageset>
		</javadoc>
		<jar filesetmanifest="merge" jarfile="${dist.dir}/javadoc.jar" basedir="${docs.api.dir}" />
	</target>


</project>
